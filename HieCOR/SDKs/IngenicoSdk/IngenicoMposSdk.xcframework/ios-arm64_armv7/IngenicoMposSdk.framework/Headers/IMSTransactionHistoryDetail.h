/*
 * //////////////////////////////////////////////////////////////////////////////
 * //
 * // Copyright Â© 2015-2021 Worldline SMB US Inc. All Rights Reserved.
 * //
 * //////////////////////////////////////////////////////////////////////////////
 */

#import <Foundation/Foundation.h>
#import "IMSCardholderInfo.h"
#import "IMSAmount.h"
#import "IMSEnum.h"
#import "IMSTokenResponseParameters.h"
#import "IMSEmvData.h"

/*!
 * This object contains detailed information about a processed transaction.
 */

@interface IMSTransactionHistoryDetail : NSObject

/*!
 * Transaction type.
 * @see IMSTransactionType
 */

@property (readonly) IMSTransactionType transactionType;

/*!
 * Point of sale entry mode.
 * @see IMSPOSEntryMode
 */

@property (readonly) IMSPOSEntryMode posEntryMode;

/*!
 * Response generated by Ingenico Payment Services.
 * i.e. Approved or Declined
 * @see IMSTransactionResponseCode
 */

@property (readonly) IMSTransactionResponseCode transactionResponseCode;

/*!
 * Returns processor specific response code.
 * @return alphanumeric processor response code for card transactions and null for cash transactions
 */
@property (readonly) NSString * _Nullable processorResponseCode;

/*!
 * Status of transaction
 * @see IMSTransactionStatus
 */

@property (readonly) IMSTransactionStatus transactionStatus;

/*!
 * The card verification method for the transaction
 * @see RoamCardVerificationMethod
 */

@property (readonly) IMSCardVerificationMethod cardverificationMethod;

/*!
 * Authorization code from processor.
 */

@property (readonly) NSString *authCode;

/*!
 * Reference for the transaction generated by Ingenico Payment Services.
 */

@property (readonly) NSString *transactionId;

/*!
 * Reference for the transaction(Globally Unique Identifier) generated by Ingenico Payment Services.
 */
@property (readonly) NSString *transactionGUID;

/*!
 * Reference for the transaction generated by Ingenico mPOS SDK.
 */

@property (readonly) NSString *clientTransactionId;

/*!
 * Reference for the original transaction generated by Ingenico Payment Services,
 * in case of refund or void transactions.
 */

@property (readonly) NSString *originalTransactionId;

/*!
 * The timestamp recorded by the processor. 
 */

@property (readonly) NSString *processorTimestamp;

/*!
 * The timezone the processor is in.
 */

@property (readonly) NSString *processorTimezone;

/*!
 * The timestamp recorded by the mobile device.
 */

@property (readonly) NSString *deviceTimestamp;

/*!
 * The timezone the mobile device is in.
 */

@property (readonly) NSString *deviceTimezone;

/*!
 * The timestamp recorded by Ingenico Payment Services.
 */

@property (readonly) NSString *paymentServiceTimestamp;

/*!
 * The timezone the server hosting Ingenico Payment Services is in.
 */

@property (readonly) NSString *paymentServiceTimezone;

/*!
 * Requested amount.
 * @see IMSAmount
 */

@property (readonly) IMSAmount *amount;

/*!
 * Approved amount in cents.
 */

@property (readonly) NSInteger approvedAmount;

/*!
 * ID reference used to associate the transaction with a waiter / clerk / sales associate.
 * The field can be alphanumeric and length cannot exceed 4 characters.
 */

@property (readonly) NSString *clerkId;

/*!
 * Card type.
 * @see IMSCardType
 */

@property (readonly) IMSCardType cardType;

/*!
 * The redacted card number. Eg: 1234XXXXXXXX5678.
 */

@property (readonly) NSString *redactedCardNumber;

/*!
 * Returns card's expiration date
 */

@property (readonly) NSString *cardExpirationDate;

/*!
 * The normalized amount that was refunded in case of a refund transaction.
 */

@property (readonly) NSInteger refundableAmount;

/*!
 * The message which was displayed on merchant's device/console.
 */

@property (readonly) NSString *clerkDisplay;

/*!
 * Introduced to support a feature in future release.
 */

@property (readonly) NSString *invoiceId;

/*!
 * Optional transaction notes.
 */

@property (readonly) NSString *transactionNote;

/*!
 * The invoice id from a third party inventory management tool linked to this transaction
 * Alphanumeric characters only. Max length: 15 chars
 */

@property (readonly) NSString *merchantInvoiceId;

/*!
 * The card holder's information.
 * @see IMSCardholderInfo
 */

@property (readonly) IMSCardholderInfo *cardholderInfo;

/*!
 * The list of products that were part of the transaction.
 * @see IMSProduct
 */

@property (readonly) NSArray *products;

/*!
 * The card holder name captured from the card if any.
 */

@property (readonly) NSString *cardHolderName;

/*!
 * Available balance amount in cents.
 */

@property (readonly) NSInteger availableBalance;

/*!
 * Custom data if any.
 */

@property (readonly) NSString *customData;

/*!
 * Card Presentment.
 * @see IMSCardPresentment
 */

@property (readonly) IMSCardPresentment cardPresentment;

/*!
 * The result of the token request, if present.
 * Note: [IMSTokenResponseParameters tokenSourceData] will be nil
 * In order to have this data included, set [IMSHistoryQueryBuilder optionalFields] to contain [IMSOptionalTransactionHistoryField OptionalFieldTokenData]
 */
@property (readonly) IMSTokenResponseParameters *tokenResponse;

/*!
 * EMV tag data
 */
@property (readonly) IMSEmvData *emvData;

/*!
 * Optional merchant order number (up to 20 characters)
 */
@property (readonly) NSString *customReference;

/*!
* should show transaction notes and invoice ID on receipt
*/
@property (readonly) bool showNotesAndInvoiceOnReceipt;

/*!
* should show transaction notes and invoice ID on receipt
*/
@property (readonly) NSString *batchNumber;

/*!
* Optional numeric field that indicates the assigned order number (up to 9 digits)
*/
@property (readonly) NSString *orderNumber;

/*!
* AVS response for the transaction
*/
@property (readonly) IMSAVSResponse avsResponse;

/*!
* CVD response for the transaction
*/
@property (readonly) IMSCVVResponse cvdResponse;

/*!
 * Transaction locale.
 * This value is returned only if the transaction request sets the locale. Nil otherwise.
 */
@property (readonly)  NSLocale * _Nullable locale;


- (id) initWithTransactionType:(IMSTransactionType)transactionType
               andPosEntryMode:(IMSPOSEntryMode)posEntryMode
    andTransactionResponseCode:(IMSTransactionResponseCode)transactionResponseCode
          andTransactionStatus:(IMSTransactionStatus)transactionStatus
      andCardVerficationMethod:(IMSCardVerificationMethod)cardVerficationMethod
                   andAuthCode:(NSString *)authCode
              andTransactionId:(NSString *)transactionId
            andTransactionGUID:(NSString *)transactionGUID
        andClientTransactionId:(NSString *)clientTransactionId
      andOriginalTransactionId:(NSString *)originalTransactionId
         andProcessorTimestamp:(NSString *)processorTimestamp
          andProcessorTimezone:(NSString *)processorTimezone
            andDeviceTimestamp:(NSString *)deviceTimestamp
             andDeviceTimezone:(NSString *)deviceTimezone
    andPaymentServiceTimestamp:(NSString *)paymentServiceTimestamp
     andPaymentServiceTimezone:(NSString *)paymentServiceTimezone
                     andAmount:(IMSAmount *)amount
             andApprovedAmount:(NSInteger)approvedAmount
                    andClerkId:(NSString *)clerkId
                   andCardType:(IMSCardType)cardType
         andRedactedCardNumber:(NSString *)redactedCardNumber
         andCardExpirationDate:(NSString *)cardExpirationDate
           andRefundableAmount:(NSInteger)refundableAmount
               andClerkDisplay:(NSString *)clerkDisplay
                  andInvoiceId:(NSString *)invoiceId
            andTransactionNote:(NSString *)transactionNote
          andMerchantInvoiceId:(NSString *)merchantInvoiceId
             andCardholderInfo:(IMSCardholderInfo *)cardholderInfo
                   andProducst:(NSArray *)products
             andCardHolderName:(NSString *)cardHolderName
           andAvailableBalance:(NSInteger)availableBalance
                 andCustomData:(NSString *)customData
    andTokenResponseParameters:(IMSTokenResponseParameters *)tokenResponse
                    andEmvData:(IMSEmvData *)emvData
            andCardPresentment:(IMSCardPresentment)cardPresentment
            andCustomReference:(NSString *)customReference
andShowNotesAndInvoiceOnReceipt:(bool)showNotesAndInvoiceOnReceipt
                andBatchNumber:(NSString *)batchNumber
                andOrderNumber:(NSString *)orderNumber
                andAvsResponse:(IMSAVSResponse)avsResponse
                andCvdResponse:(IMSCVVResponse)cvdResponse
      andProcessorResponseCode:(NSString *)processorResponseCode
                     andLocale:(NSLocale *)locale;

@end
