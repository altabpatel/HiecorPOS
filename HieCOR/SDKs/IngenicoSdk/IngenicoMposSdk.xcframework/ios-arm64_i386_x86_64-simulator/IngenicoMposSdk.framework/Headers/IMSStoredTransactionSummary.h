/*
 * //////////////////////////////////////////////////////////////////////////////
 * //
 * // Copyright Â© 2015-2021 Worldline SMB US Inc. All Rights Reserved.
 * //
 * //////////////////////////////////////////////////////////////////////////////
 */

#import <Foundation/Foundation.h>
#import "IMSEnum.h"
#import "IMSAmount.h"
#import "IMSCardholderInfo.h"

/**
 * This immutable class contains summary about a stored transaction.
 */
@interface IMSStoredTransactionSummary : NSObject

/*!
 * Reference for the Transaction generated by Ingenico SDK.
 */

@property (readonly) NSString *clientTransactionID;

/*!
 * ID reference used to associate the transaction with a waiter / clerk / sales associate.
 * The field can be alphanumeric and length cannot exceed 4 characters
 */

@property (readonly) NSString *clerkID;

/*!
 * TransactionType for base transaction request.
 * @see IMSTransactionType
 */

@property (readonly) IMSTransactionType transactionType;

/*!
 * Longitude
 * <br>
 * <b>Deprecated</b> - Returns nil. This field is considered sensitive and will be encrypted.
 * <br>
 */

@property (readonly) NSString *gpsLongitude __deprecated;

/*!
 * Latitude
 * <br>
 * <b>Deprecated</b> - Returns nil. This field is considered sensitive and will be encrypted.
 * <br>
 */

@property (readonly) NSString *gpsLatitude __deprecated;

/*!
 * Custom data
 */

@property (readonly) NSString *customData;

/*!
 * Optional transaction notes.
 */

@property (readonly) NSString *transactionNotes;

/*!
 * The invoice id from a third party inventory management tool linked to this transaction.
 * Alphanumeric characters only. Max length: 15 chars
 */

@property (readonly) NSString *merchantInvoiceID;

/*!
 * Display transaction notes and merchant invoice number on the receipt.
 */

@property (readonly) bool showNotesAndInvoiceOnReceipt;
/*!
 * The list of products.
 * @see IMSProduct
 */

@property (readonly) NSArray *products;

/*!
 * Reference for the Transaction generated by processor.
 */

@property (readonly) NSString *transactionGroupID;

/*!
 * Amount being collected.
 * @see IMSAmount
 */

@property (readonly) IMSAmount *amount;

/*!
 * 20 digit merchant order number (optional)
 */

@property (readonly) NSString *customReference;

/*!
 * The point of sale entry mode.
 * @see IMSPOSEntryMode
 */

@property (readonly) IMSPOSEntryMode posEntryMode;

/*!
 * The transactionDate recorded by the mobile device.
 */
@property (readonly) NSString *transactionDate;

/*!
 * The transactionTime recorded by the mobile device.
 */
@property (readonly) NSString *transactionTime;

/*!
 * The transactionTimezone the mobile device is in.
 */
@property (readonly) NSString *transactionTimezone;

/*!
 * Reference for the original client transaction Id in case of void transactions.
 */

@property (readonly) NSString *originalClientTransactionID;

/*!
 * BASE64 encoded string representing the image, part of the update request
 * <br>
 * <b>Deprecated</b> - Returns nil. This field is considered sensitive and will be encrypted.
 * <br>
 */
@property (readonly) NSString *signatureImage __deprecated;

/*!
 * Cardholder information, part of the update request
 * <br>
 * <b>Deprecated</b> - Returns nil. This field is considered sensitive and will be encrypted.
 * <br>
 */
@property (readonly) IMSCardholderInfo *cardholderInfo __deprecated;

/*!
 * Response code corresponding to the previous failed upload
 */
@property (readonly) NSString *responseCode;

/*!
 * Count of number of attempts to upload the current stored transaction
 */
@property (readonly) NSInteger retryCount;

/*!
 * Indicates whether the transaction is completed, part of the update request
 */

@property (readonly) bool isCompleted;

/*!
 * Format to generate Unique Card Identifier for this transaction. (optional)
 */
@property (nonatomic) IMSUCIFormat uciFormat;

/*!
 * Last stored email address for receipt
 * <br>
 * <b>Deprecated</b> - Returns nil. This field is considered sensitive and will be encrypted.
 * <br>
 */
@property (readonly) NSString *lastStoredEmailAddressForReceipt __deprecated;

/*!
 * Indicates if the transaction has a corresponding stored void transaction
 */
@property (readonly) bool hasStoredVoid;

/*!
 * Optional numeric field up to 9 digits long that indicates the assigned order number
 */
@property (readonly) NSString *orderNumber;


/*!
 * The redacted card number. Eg: 1234********5678.
 */
@property (readonly) NSString *redactedCardNumber;


/*!
 * Username of the user that stored the transaction.
 */
@property (readonly) NSString *storeTransactionUsername;



- (id) initWithClientTransactionID:(NSString*)clientTransactionID
                        andClerkID:(NSString*)clerkID
                andTransactionType:(IMSTransactionType)transactionType
                      andLongitude:(NSString*)gpsLong
                       andLatitude:(NSString*)gpsLat
                     andCustomData:(NSString*)customData
               andTransactionNotes:(NSString*)transactionNotes
              andMerchantInvoiceID:(NSString*)merchantInvoiceID
   andShowNotesAndInvoiceOnReceipt:(bool)showNotesAndInvoiceOnReceipt
                       andProducts:(NSArray*)products
             andTransactionGroupID:(NSString*)transactionGroupID
                         andAmount:(IMSAmount*)amount
                andCustomReference:(NSString*)customReference
                   andPosEntryMode:(IMSPOSEntryMode)posEntryMode
                andTransactionDate:(NSString*)transactionDate
                andTransactionTime:(NSString*)transactionTime
            andTransactionTimezone:(NSString*)transactionTimezone
    andOriginalClientTransactionID:(NSString*)originalClientTransactionID
                 andSignatureImage:(NSString*)signatureImage
                 andCardHolderInfo:(IMSCardholderInfo*)cardholderInfo
                   andResponseCode:(NSString*)responseCode
                     andRetryCount:(NSInteger)retryCount
                    andIsCompleted:(bool)isCompleted
                      andUCIFormat:(IMSUCIFormat) uciFormat
         andEmailAddressForReceipt:(NSString *)lastStoredEmailAddressForReceipt
                  andHasStoredVoid:(bool)hasStoredVoid
                    andOrderNumber:(NSString*)orderNumber
             andRedactedCardNumber:(NSString*)redactedCardNumber
       andStoreTransactionUsername:(NSString*)storeTransactionUsername;
@end
