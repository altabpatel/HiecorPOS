/*
 * //////////////////////////////////////////////////////////////////////////////
 * //
 * // Copyright Â© 2015-2021 Worldline SMB US Inc. All Rights Reserved.
 * //
 * //////////////////////////////////////////////////////////////////////////////
 */

#import <Foundation/Foundation.h>
#import "IMSEnum.h"
#import "IMSCard.h"
#import "IMSAmount.h"
#import "IMSTokenResponseParameters.h"
#import "IMSEmvData.h"
#import "IMSVasData.h"

/*!
 * This object contains information about the result of the transaction request.
 */

@interface IMSTransactionResponse : NSObject

/*!
 *  Amount the host has authorized for this transaction.
 *  Note: This amount may be less than the amount originally requested in the transaction request
 *  amount for partial approvals.
 */

@property (readonly) NSInteger authorizedAmount;

/*!
 * Authorization code from processor.
 */

@property (readonly) NSString *authCode;

/*!
 * Reference for the transaction generated by Ingenico Payment Services.
 */

@property (readonly) NSString *transactionID;

/*!
 * Reference for the Invoice generated by Ingenico Payment Server.
 */

@property (readonly) NSString *invoiceID;

/*!
 * Reference for a group of related transactions (like split-tender) that are linked.
 * If not specified in the request, it will be generated and returned in the response.
 */

@property (readonly) NSString *transactionGroupID;

/*!
 * The message to be displayed on merchant's device/console.
 */

@property (readonly) NSString *clerkDisplay;

/*!
 * Reference for the Transaction generated by Ingenico mPOS SDK.
 */

@property (readonly) NSString *clientTransactionID;

/*!
 * Reference for the Transaction sequence number generated by Ingenico payment services.
 */

@property (readonly) NSString *sequenceNumber;

/*!
 * The card verification method for the transaction
 * @see RoamCardVerificationMethod
 */

@property (readonly) IMSCardVerificationMethod cardVerificationMethod;

/*!
 * The pos entry mode
 * @see RoamPOSEntryMode
 */

@property (readonly) IMSPOSEntryMode posEntryMode;

/*!
 * Returns the redacted number of the card used to make this transaction
 */

@property (readonly) NSString *redactedCardNumber;

/*!
 * Returns the expiration date of the card used to make this transaction
 */

@property (readonly) NSString *cardExpirationDate;

/*!
 * Available Balance on the card used for the transaction (Gift Cards, Prepaid Credit Cards, etc.,) returned by the processor
 */

@property (readonly) NSInteger availableBalance;

/*!
 * Amount object submitted during the transaction request.
 * @see IMSAmount
 */

@property (readonly) IMSAmount *submittedAmount;

/*!
 * Object containing the response of token request.
 * @see IMSTokenResponseParameters
 */

@property (readonly) IMSTokenResponseParameters *tokenResponseParameters;

/*!
 * GUID Reference for the transaction generated by Ingenico Payment Services.
 */

@property (readonly) NSString *transactionGUID;

/*!
 * The response generated by Ingenico Payment Server.
 * i.e. Approved or Declined
 * @see IMSTransactionResponseCode
 */

@property (readonly) IMSTransactionResponseCode transactionResponseCode;

/*!
 * The card type.
 * @see IMSCardType
 */

@property (readonly) IMSCardType cardType;

/*!
 * Returns emv data which could be printed on the receipt
 * @see IMSEmvData
 */

@property (readonly) IMSEmvData *emvData;

/*!
 * Returns the AVS response
 * @see IMSAVSResponse
 */
@property (readonly) IMSAVSResponse avsResponse;

/*!
 * Returns the Unique Card Identifier Format
 * @see IMSUCIFormat
 */
@property (readonly) IMSUCIFormat uciFormat;

/*!
 * Returns the Unique identifier for the card number
 */
@property (readonly) NSString *uniqueCardIdentifier;

/*!
 * Returns the card holder name
 */
@property (readonly) NSString *cardholderName;

/*!
 * Returns the message to be displayed on customer's payment device.
 */
@property (readonly) NSString *customerDisplay;

/*!
 * Returns the batch number.
 */
@property (readonly) NSString *batchNumber;

/*!
 * Returns the transaction type
 */
@property (readonly) IMSTransactionType transactionType;

/*!
 * The timestamp recorded by the processor.
 */
@property (readonly) NSString *processorTimestamp;

/*!
 * The timezone the processor is in.
 */
@property (readonly) NSString *processorTimezone;

/*!
 * The timestamp recorded by the mobile device.
 */
@property (readonly) NSString *deviceTimestamp;

/*!
 * The timezone the mobile device is in.
 */
@property (readonly) NSString *deviceTimezone;

/*!
 * The timestamp recorded by Ingenico Payment Services.
 */
@property (readonly) NSString *paymentServiceTimestamp;

/*!
 * The timezone the server hosting Ingenico Payment Services is in.
 */
@property (readonly) NSString *paymentServiceTimezone;

/*!
 * Returns the response code from the CVV2/CVD request
 * @see IMSCVVResponse
 */
@property (readonly) IMSCVVResponse cvvResponse;

/*!
 * Transaction locale.
 * This value is returned only if the transaction request sets the locale. Nil otherwise.
 */
@property (readonly)  NSLocale * _Nullable locale;

/*!
 * Returns processor specific response code.
 * @return alphanumeric processor response code for card transactions and null for cash transactions
 */
@property (readonly) NSString * _Nullable processorResponseCode;

/*
 * Returns the Apple VAS data from a VAS transaction
 * *@See IMSVasData
 */
@property (readonly) IMSVasData * vasData;

- (id) initWithTransactionID:(NSString *)transactionID
                andInvoiceID:(NSString *)invoiceID
                 andAuthCode:(NSString *)authCode
         andAuthorizedAmount:(NSInteger)authorizedAmount
             andClerkDisplay:(NSString *)clerkDisplay
       andTransactionGroupID:(NSString *)transactionGroupID
      andClientTransactionID:(NSString *)clientTransactionID
           andSequenceNumber:(NSString *)sequenceNumber
             andPosEntryMode:(IMSPOSEntryMode)entryMode
   andCardVerificationMethod:(IMSCardVerificationMethod)method
       andRedactedCardNumber:(NSString *)redactedCardNumber
       andCardExpirationDate:(NSString *)cardExpirationDate
         andAvailableBalance:(NSInteger)avaialbleBalance
          andSubmittedAmount:(IMSAmount *)submittedAmount
  andTokenResponseParameters:(IMSTokenResponseParameters *)tokenResponseParameters
          andTransactionGUID:(NSString *)transactionGUID
  andTransactionResponseCode:(IMSTransactionResponseCode)transactionResponseCode
                 andCardType:(IMSCardType)cardType
                  andEmvData:(IMSEmvData *)emvData
              andAVSResponse:(IMSAVSResponse)avsResponse
                andUCIFormat:(IMSUCIFormat)uciFormat
     andUniqueCardIdentifier:(NSString *)uniqueCardIdentifier
           andCardholderName:(NSString *)cardholderName
          andCustomerDisplay:(NSString *)customerDisplay
              andBatchNumber:(NSString *)batchNumber
          andTransactionType:(IMSTransactionType)transactionType
       andProcessorTimestamp:(NSString *) processorTimestamp
        andProcessorTimezone:(NSString *) processorTimezone
          andDeviceTimestamp:(NSString *) deviceTimestamp
           andDeviceTimezone:(NSString *) deviceTimezone
  andPaymentServiceTimestamp:(NSString *) paymentServiceTimestamp
   andPaymentServiceTimezone:(NSString *) paymentServiceTimezone
              andCVVResponse:(IMSCVVResponse) cvvResponse
                   andLocale:(NSLocale *)locale
    andProcessorResponseCode:(NSString *)processorResponseCode
                  andVasData:(IMSVasData *) vasData;

- (NSDictionary*)toNSDictionary;
@end
